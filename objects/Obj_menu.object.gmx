<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if control==true
    blink=-blink
else
    blink=true
alarm[5]=5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 0; i &lt; 3; i++ ) {
    if i == option - 1 {
        if xa[i] &gt;- 145 {
            xa[i] -= 3
            alarm[4] = 1
        }
    }
    else if xa[i] &lt; -115 {
        xa[i] += 3
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i = 1; i &lt; 12; i++) {
    if i == option {
        if xa[i] &lt;- 85 {
            xa[i] += 3
            alarm[3] = 1
        }
    }
    else if xa[i] &gt;- 115 {
        xa[i] -= 3
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if al &lt; 1{
    al += 0.1
    alarm[2] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.checkpointrm == 'Rom_Tutorial' {
    audio_play_sound(Sou_Tutorial,10,true)
    room_goto(Rom_testes)
}
else if global.checkpointrm == 'Rom_sea' {
    audio_play_sound(Sou_Beach,10,true)
    room_goto(Rom_sea)
}
else {
    //audio_play_sound(Sou_Village,10,true)
    //room_goto(asset_get_index(global.checkpointrm))
    audio_play_sound(Sou_Action,10,true)
    room_goto(Rom_beach_boat)
}
global.portalx=132
global.portaly=396
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if xx &gt;- 30 {
    for (i = 0; i &lt; 12; i++) {
        xa[i] += xx;
    }
    xx -= 1
    alarm[0] = 1
}
else {
    alarm[3] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menu&gt;1{
    if global.volume == 0 {audio_stop_all()}
    if global.name == '' and control =- false {global.name = '---'}
}

if scroll &gt; vv {scroll-= 5}
if scroll &lt; vv {scroll+= 5}

if menu = 3{
    if global.language = 1{
        if global.dicolor = 1 {color = 'red'}
        if global.dicolor = 2 {color = 'orange'}
        if global.dicolor = 3 {color = 'yellow'}
        if global.dicolor = 4 {color = 'green'}
        if global.dicolor = 5 {color = 'blue'}
        if global.dicolor = 6 {color = 'pink'}
        if global.dicolor = 7 {color = 'purple'}
        if global.dicolor = 8 {color = 'white'}
    }

    if global.language = 2{
        if global.dicolor = 1{color = 'vermelho'}
        if global.dicolor = 2{color = 'laranja'}
        if global.dicolor = 3{color = 'amarelo'}
        if global.dicolor = 4{color = 'verde'}
        if global.dicolor = 5{color = 'azul'}
        if global.dicolor = 6{color = 'rosa'}
        if global.dicolor = 7{color = 'roxo'}
        if global.dicolor = 8{color = 'branco'}
    }

    if global.language = 3{
        if global.dicolor = 1{color = 'rojo'}
        if global.dicolor = 2{color = 'naranja'}
        if global.dicolor = 3{color = 'amarillo'}
        if global.dicolor = 4{color = 'verde'}
        if global.dicolor = 5{color = 'azul'}
        if global.dicolor = 6{color = 'rosa'}
        if global.dicolor = 7{color = 'púrpura'}
        if global.dicolor = 8{color = 'blanco'}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_left)
or keyboard_check(ord(string('A')))
if menu=3 and option=1 and global.volume&gt;0
    global.volume-=1

if keyboard_check(vk_right)
or keyboard_check(ord(string('D')))
if menu=3 and option=1 and global.volume&lt;100
    global.volume+=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_resize(application_surface,600,450)
cursor_sprite = Spr_aim

globalvar fonttle, dialog;
fonttle = font_add_sprite_ext(Spr_fonttle,'0123456789',false,0)
dialog = font_add_sprite_ext(Spr_dialog,'abcdefghijklmnopqrstuvwxyzáâãçéêíñóôõú!?.,-^&lt;&gt;/:+0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ|',true,2)

menu = 1
option = 1
control = false
color = 'red'
scroll = 0
vv = 0

xa = array_create(12)
for (i = 0; i &lt; 12; i++) {
    xa[i] = -500;
}
xx = 40
al = 0
blink = false

ini_open('gamedata.ini')
t1 = ini_read_string('slot1','name','---')
t2 = ini_read_string('slot2','name','---')
t3 = ini_read_string('slot3','name','---')
ini_close()

alarm[0] = 1
alarm[5] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)
draw_set_font(dialog)
draw_set_halign(fa_left)
draw_set_valign(fa_top)

show_debug_message(xa[0])
show_debug_message(xx)

if menu&lt;4
 {draw_set_color(c_black)
draw_set_alpha(0.5)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+200+scroll+11, view_xview[0]+view_wview[0]+xa[1]+11, view_yview[0]+240+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+260+scroll+11, view_xview[0]+view_wview[0]+xa[2]+11, view_yview[0]+300+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+320+scroll+11, view_xview[0]+view_wview[0]+xa[3]+11, view_yview[0]+360+scroll+11, false)
draw_set_color(c_white)
draw_set_alpha(1)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+200+scroll, view_xview[0]+view_wview[0]+xa[1], view_yview[0]+240+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+260+scroll, view_xview[0]+view_wview[0]+xa[2], view_yview[0]+300+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+320+scroll, view_xview[0]+view_wview[0]+xa[3], view_yview[0]+360+scroll, false)

if menu=3
 {draw_set_color(c_black)
draw_set_alpha(0.5)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+20+scroll+11, view_xview[0]+view_wview[0]+xa[4]+11, view_yview[0]+60+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+80+scroll+11, view_xview[0]+view_wview[0]+xa[5]+11, view_yview[0]+120+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+140+scroll+11, view_xview[0]+view_wview[0]+xa[6]+11, view_yview[0]+180+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+380+scroll+11, view_xview[0]+view_wview[0]+xa[7]+11, view_yview[0]+420+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+440+scroll+11, view_xview[0]+view_wview[0]+xa[8]+11, view_yview[0]+480+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+500+scroll+11, view_xview[0]+view_wview[0]+xa[9]+11, view_yview[0]+540+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+560+scroll+11, view_xview[0]+view_wview[0]+xa[10]+11, view_yview[0]+600+scroll+11, false)
draw_rectangle(view_xview[0]+xa[0]+11, view_yview[0]+620+scroll+11, view_xview[0]+view_wview[0]+xa[11]+11, view_yview[0]+660+scroll+11, false)

draw_set_color(c_white)
draw_set_alpha(1)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+20+scroll, view_xview[0]+view_wview[0]+xa[4], view_yview[0]+60+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+80+scroll, view_xview[0]+view_wview[0]+xa[5], view_yview[0]+120+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+140+scroll, view_xview[0]+view_wview[0]+xa[6], view_yview[0]+180+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+380+scroll, view_xview[0]+view_wview[0]+xa[7], view_yview[0]+420+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+440+scroll, view_xview[0]+view_wview[0]+xa[8], view_yview[0]+480+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+500+scroll, view_xview[0]+view_wview[0]+xa[9], view_yview[0]+540+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+560+scroll, view_xview[0]+view_wview[0]+xa[10], view_yview[0]+600+scroll, false)
draw_rectangle(view_xview[0]+xa[0], view_yview[0]+620+scroll, view_xview[0]+view_wview[0]+xa[11], view_yview[0]+660+scroll, false)
}
}

if menu&gt;3
 {draw_set_color(c_black)
draw_set_alpha(0.5)
draw_rectangle(x+xx*8, y+xx*4, x-xx*8, y-xx*4, false)
draw_set_color(c_white)
draw_set_alpha(1)
draw_rectangle(x+xx*8, y+xx*4, x-xx*8, y-xx*4, false)

if xx=-30 {
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_black)

if menu=4 {
draw_text(x, y, 'game maker studio 1.4#lmms#pxtone noise##kaixtr 2019# ')
if option=1 {draw_sprite_ext(Spr_socialmedia, 0, x-176, y+66, 1.5, 1.5, 0, c_white, 1)}else {draw_sprite_ext(Spr_socialmedia, 0, x-176, y+66, 1, 1, 0, c_white, 1)}
if option=2 {draw_sprite_ext(Spr_socialmedia, 1, x-88, y+66, 1.5, 1.5, 0, c_white, 1)}else {draw_sprite_ext(Spr_socialmedia, 1, x-88, y+66, 1, 1, 0, c_white, 1)}
if option=3 {draw_sprite_ext(Spr_socialmedia, 2, x-11, y+66, 1.5, 1.5, 0, c_white, 1)}else {draw_sprite_ext(Spr_socialmedia, 2, x-11, y+66, 1, 1, 0, c_white, 1)}
if option=4 {draw_sprite_ext(Spr_socialmedia, 3, x+77, y+66, 1.5, 1.5, 0, c_white, 1)}else {draw_sprite_ext(Spr_socialmedia, 3, x+77, y+66, 1, 1, 0, c_white, 1)}
if option=5 {draw_sprite_ext(Spr_socialmedia, 4, x+165, y+66, 1.5, 1.5, 0, c_white, 1)}else {draw_sprite_ext(Spr_socialmedia, 4, x+165, y+66, 1, 1, 0, c_white, 1)}}

else {
if global.language=1 {
if menu=5 {draw_text(x, y, 'want to play the tutorial?')}
if menu=6 {draw_text(x, y, 'are you sure?')}
if option=1 {draw_text_transformed(x-44, y+66, 'yes', 1.5, 1.5, 0)}else {draw_text(x-44, y+66, 'yes')}
if option=2 {draw_text_transformed(x+44, y+66, 'no', 1.5, 1.5, 0)}else {draw_text(x+44, y+66, 'no')}}

if global.language=2 {
if menu=5 {draw_text(x, y, 'quer jogar o tutorial?')}
if menu=6 {draw_text(x, y, 'tem certeza?')}
if option=1 {draw_text_transformed(x-44, y+66, 'sim', 1.5, 1.5, 0)}else {draw_text(x-44, y+66, 'sim')}
if option=2 {draw_text_transformed(x+44, y+66, 'não', 1.5, 1.5, 0)}else {draw_text(x+44, y+66, 'não')}}

if global.language=3 {
if menu=5 {draw_text(x, y, 'quieres jugar el tutorial?')}
if menu=6 {draw_text(x, y, 'está seguro?')}
if option=1 {draw_text_transformed(x-44, y+66, 'sí', 1.5, 1.5, 0)}else {draw_text(x-44, y+66, 'sí')}
if option=2 {draw_text_transformed(x+44, y+66, 'non', 1.5, 1.5, 0)}else {draw_text(x+44, y+66, 'non')}}
}}}

draw_set_color(c_black)
if menu=1 {
draw_text(view_xview[0]+280+xa[1], view_yview[0]+220, t1)
draw_text(view_xview[0]+280+xa[2], view_yview[0]+280, t2)
draw_text(view_xview[0]+280+xa[3], view_yview[0]+340, t3)
}

if menu=2 {
if global.language=1
 {draw_text(view_xview[0]+280+xa[1], view_yview[0]+220, 'play')
draw_text(view_xview[0]+280+xa[2], view_yview[0]+280, 'configurations')
draw_text(view_xview[0]+280+xa[3], view_yview[0]+340, 'about')}

if global.language=2
 {draw_text(view_xview[0]+280+xa[1], view_yview[0]+220, 'jogar')
draw_text(view_xview[0]+280+xa[2], view_yview[0]+280, 'configurações')
draw_text(view_xview[0]+280+xa[3], view_yview[0]+340, 'sobre')}

if global.language=3
 {draw_text(view_xview[0]+280+xa[1], view_yview[0]+220, 'jugar')
draw_text(view_xview[0]+280+xa[2], view_yview[0]+280, 'configuraciónes')
draw_text(view_xview[0]+280+xa[3], view_yview[0]+340, 'sobre')}
}

if menu=3 {
if global.language=1 {
if option!=-2 or control=false {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'name: '+global.name)}
else if blink=true {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'name: '+global.name)}

draw_text(view_xview[0]+280+xa[5], view_yview[0]+100+scroll, '&lt; language &gt;: english')
draw_text(view_xview[0]+280+xa[6], view_yview[0]+160+scroll, '&lt; color &gt;: '+color)

if option!=2 or control=false {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'walk l: '+string(global.left))}
else if blink=true {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'walk l: '+string(global.left))}
if option!=3 or control=false {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'walk r: '+string(global.right))}
else if blink=true {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'walk r: '+string(global.right))}
if option!=4 or control=false {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'jump: '+string(global.up))}
else if blink=true {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'jump: '+string(global.up))}
if option!=5 or control=false {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'squat: '+string(global.down))}
else if blink=true {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'squat: '+string(global.down))}
if option!=6 or control=false {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'run: '+string(global.run))}
else if blink=true {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'run: '+string(global.run))}
draw_text(view_xview[0]+280+xa[10], view_yview[0]+580+scroll, 'erase data')
draw_text(view_xview[0]+280+xa[11], view_yview[0]+640+scroll, 'exit')
}

if global.language=2 {
if option!=-2 or control=false {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'nome: '+global.name)}
else if blink=true {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'nome: '+global.name)}

draw_text(view_xview[0]+280+xa[5], view_yview[0]+100+scroll, '&lt; idioma &gt;: português')
draw_text(view_xview[0]+280+xa[6], view_yview[0]+160+scroll, '&lt; cor &gt;: '+color)

if option!=2 or control=false {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'andar e: '+string(global.left))}
else if blink=true {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'andar e: '+string(global.left))}
if option!=3 or control=false {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'andar d: '+string(global.right))}
else if blink=true {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'andar d: '+string(global.right))}
if option!=4 or control=false {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'pular: '+string(global.up))}
else if blink=true {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'pular: '+string(global.up))}
if option!=5 or control=false {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'agachar: '+string(global.down))}
else if blink=true {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'agachar: '+string(global.down))}
if option!=6 or control=false {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'correr: '+string(global.run))}
else if blink=true {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'correr: '+string(global.run))}
draw_text(view_xview[0]+280+xa[10], view_yview[0]+580+scroll, 'apagar dados')
draw_text(view_xview[0]+280+xa[11], view_yview[0]+640+scroll, 'sair')
}

if global.language=3 {
if option!=-2 or control=false {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'nombre: '+global.name)}
else if blink=true {draw_text(view_xview[0]+280+xa[4], view_yview[0]+40+scroll, 'nombre: '+global.name)}

draw_text(view_xview[0]+280+xa[5], view_yview[0]+100+scroll, '&lt; idioma &gt;: español')
draw_text(view_xview[0]+280+xa[6], view_yview[0]+160+scroll, '&lt; color &gt;: '+color)

if option!=2 or control=false {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'andar e: '+string(global.left))}
else if blink=true {draw_text(view_xview[0]+280+xa[2], view_yview[0]+280+scroll, 'andar e: '+string(global.left))}
if option!=3 or control=false {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'andar d: '+string(global.right))}
else if blink=true {draw_text(view_xview[0]+280+xa[3], view_yview[0]+340+scroll, 'andar d: '+string(global.right))}
if option!=4 or control=false {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'pular: '+string(global.up))}
else if blink=true {draw_text(view_xview[0]+280+xa[7], view_yview[0]+400+scroll, 'pular: '+string(global.up))}
if option!=5 or control=false {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'agachar: '+string(global.down))}
else if blink=true {draw_text(view_xview[0]+280+xa[8], view_yview[0]+460+scroll, 'agachar: '+string(global.down))}
if option!=6 or control=false {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'correr: '+string(global.run))}
else if blink=true {draw_text(view_xview[0]+280+xa[9], view_yview[0]+520+scroll, 'correr: '+string(global.run))}
draw_text(view_xview[0]+280+xa[10], view_yview[0]+580+scroll, 'borrar dados')
draw_text(view_xview[0]+280+xa[11], view_yview[0]+640+scroll, 'salir')
}

draw_text(view_xview[0]+280+xa[1], view_yview[0]+220+scroll, '&lt; volume &gt; : '+string(global.volume))}

draw_set_alpha(al)
draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if xx = -30 {
    if menu = 1{
        global.slot = option
        ini_open('gamedata.ini')
        
        //Controles
        global.up = ini_read_string('slot'+string(global.slot),'b_up', 'W')
        global.down = ini_read_string('slot'+string(global.slot),'b_down', 'S')
        global.left = ini_read_string('slot'+string(global.slot),'b_left', 'A')
        global.right = ini_read_string('slot'+string(global.slot),'b_right', 'D')
        global.run = ini_read_string('slot'+string(global.slot),'b_run', vk_shift)
        global.dicolor = ini_read_real('slot'+string(global.slot),'dicolor', 1)
        global.language = ini_read_real('slot'+string(global.slot),'language',1)
        global.volume = ini_read_real('slot'+string(global.slot),'volume',100)
        global.name = ini_read_string('slot'+string(global.slot),'name','---')
        
        //Geral
        global.pause = 0
        global.fade = false
        global.view = 0
        global.scene = ini_read_real('slot'+string(global.slot),'scene',0)
        global.daynight = ini_read_real('slot'+string(global.slot),'daynight',1100)
        
        a = 0
        repeat(10) {
            global.lever[a] = ini_read_string('slot'+string(global.slot),'lever','false')
            global.radio[a] = ini_read_string('slot'+string(global.slot),'radio','false')
            a+= 1
        }
        
        global.checkpointrm = ini_read_string('slot'+string(global.slot),'checkpointrm','Rom_sea')
        global.checkpointx = ini_read_real('slot'+string(global.slot),'checkpointx',154)
        global.checkpointy = ini_read_real('slot'+string(global.slot),'checkpointy',264)
        global.portalx = global.checkpointx
        global.portaly = global.checkpointy
        
        //Estatísticas
        global.hand = 0
        global.equip[0] = ini_read_string('slot'+string(global.slot),'equip1','')
        global.equip[1] = ini_read_string('slot'+string(global.slot),'equip2','')
        global.ammo[0] = ini_read_real('slot'+string(global.slot),'ammo1',0)
        global.ammo[1] = ini_read_real('slot'+string(global.slot),'ammo2',0)
        global.cartridge[0] = ini_read_real('slot'+string(global.slot),'cartridge1',0)
        global.cartridge[1] = ini_read_real('slot'+string(global.slot),'cartridge2',0)
        global.bombs = 3
        global.money = ini_read_real('slot'+string(global.slot),'money',0)
        global.level = ini_read_real('slot'+string(global.slot),'level',10)
        global.xp = ini_read_real('slot'+string(global.slot),'xp',0)
        
        global.max_life = ini_read_real('slot'+string(global.slot),'max_life',30)
        global.max_drowing = ini_read_real('slot'+string(global.slot),'max_drowing',1200)
        global.max_xp = ini_read_real('slot'+string(global.slot),'max_xp',30)
        global.resistance = ini_read_real('slot'+string(global.slot),'resistance',0.02)
        global.tapes = ini_read_real('slot'+string(global.slot),'tapes',0)
        
        global.life = global.max_life
        global.liferedux = global.life
        global.drowing = global.max_drowing
        
        //Inventário
        global.inv = ds_grid_create(6,4)
        
        ini_close()
        
        if global.scene = 0 {
            menu = 3;
            option = -2
        }
        else {
            menu = 2
        }
        option = 1
        
        for (i = 0; i &lt; 12; i++) {
            xa[i] = -500;
        }
        xx = 40
        alarm[0] = 1
        audio_play_sound(Sou_Menu,10,true)
        exit
    }
    
    if menu = 2{
        if option = 1{
            if global.scene = 0 {
                menu = 5
                xx = 0
                alarm[0] = 1
                exit
            }
            else {
                audio_stop_all()
                alarm[1] = 60
                alarm[2] = 1
            }
        }
    
        if option = 2 {
            menu = 3
            option = -2
            for (i = 0; i &lt; 12; i++) {
                xa[i] = -500;
            }
            xx = 40
            alarm[0] = 1
            exit
        }
        
        if option = 3 {
            menu = 4
            option = 5
            xx = 0
            alarm[0] = 1
            exit
            }
        }
    
    if menu = 3{
        if option = -2 {
            if control = true{control = false;exit}
            if control = false{control = true;global.name = '';keyboard_string = '';exit}
        }
        if option = 2 or option = 3 or option = 4 or option = 5 or option = 6 {
            if control = false{control = true;keyboard_string = '';exit}
        }
        if option = 7 {
            menu = 6
            option = 2
            xx = 0
            alarm[0] = 1
            exit
        }
        
        if option = 8 {
            menu = 2
            scroll = 0
            vv = 0
            option = 1
            for (i = 0; i &lt; 12; i++) {
                xa[i] = -500;
            }
            xx = 40
            alarm[0] = 1
            ini_open('gamedata.ini')
            ini_write_string('slot'+string(global.slot),'name',global.name)
            ini_write_real('slot'+string(global.slot),'language',global.language)
            ini_write_real('slot'+string(global.slot),'dicolor',global.dicolor)
            ini_write_real('slot'+string(global.slot),'volume',global.volume)
            ini_write_string('slot'+string(global.slot),'b_up',global.up)
            ini_write_string('slot'+string(global.slot),'b_down',global.down)
            ini_write_string('slot'+string(global.slot),'b_left',global.left)
            ini_write_string('slot'+string(global.slot),'b_right',global.right)
            ini_write_string('slot'+string(global.slot),'b_run',global.run)
            ini_close()
            exit
        }
    }
    
    // Menu SOBRE
    if menu = 4{
        if option = 1{url_open('https://twitter.com/kaixtr')}
        if option = 2{url_open('https://instagram.com/bramosewerton/')}
        if option = 3{url_open('https://www.youtube.com/channel/UCc1wfnJzs0zvsj-sdZ_yWYA?view_as = subscriber')}
        if option = 4{url_open('https://kaixtr.tumblr.com')}
    
        if option = 5{
            menu = 2
            option = 3
            for (i = 0; i &lt; 12; i++) {
                xa[i] = -500;
            }
            xx = 40
            alarm[0] = 1
            exit
            }
        }
    
    // POP-UP do Tutorial
    if menu == 5 {
        if option == 1 {
            global.portalx = 99;
            global.portaly = 220
            global.checkpointx = 99;
            global.checkpointy = 220;
            global.checkpointrm = 'Rom_Tutorial'
        }
        if option == 2 {
            global.portalx = 154;
            global.portaly = 264
            global.checkpointx = 154;
            global.checkpointy = 264;
            global.checkpointrm = 'Rom_sea'
        }
        audio_stop_all()
        alarm[1] = 60
        alarm[2] = 1
    }
    if menu == 6{
        if option == 1{
            ini_open('gamedata.ini')
            ini_write_string('slot'+string(global.slot),'name','---')
            ini_section_delete('slot'+string(global.slot))
            ini_close()
            
            menu = 1
            option = 1
            scroll = 0
            vv = 0
            for (i = 0; i &lt; 12; i++) {
                xa[i] = -500;
            }
            xx = 40
            alarm[0] = 1
            exit
        }
        if option == 2{
            menu = 3
            option = 7
            for (i = 0; i &lt; 12; i++) {
                xa[i] = -500;
            }
            xx = 40
            alarm[0] = 1
            exit
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if xx=-30{
    if menu&lt;3{
        if keyboard_check_released(vk_up)
        or keyboard_check_released(ord(string('W')))
        if option&gt;1{option-=1;alarm[3]=1}
        
        if keyboard_check_released(vk_down)
        or keyboard_check_released(ord(string('S')))
        if option&lt;3{option+=1;alarm[3]=1}
    }
    
    if menu=3{
        if control=false{
            if keyboard_check_released(vk_up)
            or keyboard_check_released(ord(string('W')))
            if option&gt;-2{option-=1;alarm[3]=1
            if option&gt;1 and option&lt;9{vv+=60}}
            
            if keyboard_check_released(vk_down)
            or keyboard_check_released(ord(string('S')))
            if option&lt;8{option+=1;alarm[3]=1
            if option&gt;2 and option&lt;9{vv-=60}}
            
            if keyboard_check_released(vk_left)
            or keyboard_check_released(ord(string('A')))
            {if option=-1{if global.language&gt;1{global.language-=1}}
            if option=0{if global.dicolor&gt;1{global.dicolor-=1}}}
            
            if keyboard_check_released(vk_right)
            or keyboard_check_released(ord(string('D')))
            {if option=-1{if global.language&lt;3{global.language+=1}}
            if option=0{if global.dicolor&lt;8{global.dicolor+=1}}}
        }
        
        if control=true{
            if option&gt;-2{
                if keyboard_check_released(vk_enter)=false{
                    bt=string_upper(keyboard_lastchar)
                    if keyboard_lastkey=16{bt=vk_shift}
                    if option=2{global.left=bt}
                    if option=3{global.right=bt}
                    if option=4{global.up=bt}
                    if option=5{global.down=bt}
                    if option=6{global.run=bt}
                    control=false
                    exit
                }
            }
            else if string_length(global.name)&lt;20 {
                global.name=string_lower(keyboard_string)
            }
        }
    }
    
    if menu=4{
        if keyboard_check_released(vk_left)
        or keyboard_check_released(ord(string('A')))
        if option&gt;1{option-=1;alarm[3]=1}
        
        if keyboard_check_released(vk_right)
        or keyboard_check_released(ord(string('D')))
        if option&lt;5{option+=1;alarm[3]=1}
    }
    
    if menu&gt;4{
        if keyboard_check_released(vk_left)
        or keyboard_check_released(ord(string('A')))
        {option=1}
        
        if keyboard_check_released(vk_right)
        or keyboard_check_released(ord(string('D')))
        {option=2}
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
